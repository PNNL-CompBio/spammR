% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_spe.R
\name{impute_spe}
\alias{impute_spe}
\title{Impute missing values based on spatial coordinates}
\usage{
impute_spe(
  spe,
  assay_name,
  method = c("zero", "median", "median_half", "global_mean", "spatial_unit_mean",
    "knn_global", "spatial_unit_knn", "knn_global", "knn_splatial"),
  spatial_unit_colname,
  spatialCoord_x_colname,
  spatialCoord_y_colname,
  knn_k = NULL,
  allowed_missingness_perProtein = NULL,
  allowed_missingness_perSample = NULL
)
}
\arguments{
\item{spe}{SPE containing data Data frame containing data to be imputed, where rows correspond to features (which can be specified as row names of dat but it is not required that they be specified) and columns correspond to samples. Column names must correspond to names provided in the sample identifier column in the metadata parameter.}

\item{assay_name}{name of assay with data to be imputed}

\item{method}{Method of imputation to be used. See details.}

\item{spatial_unit_colname}{Column name in metadata that specifies spatial unit information. Example: ROI_abbreviation.}

\item{spatialCoord_x_colname}{Column name in metadata that specifies the X coordinate for each sample.}

\item{spatialCoord_y_colname}{Column name in metadata that specifies the Y coordinate for each sample.}

\item{knn_k}{K value to be used for k-nearest neighbor imputation}

\item{allowed_missingness_perProtein}{Proportion of samples allowed to have missing data for a protein in the given spatial unit specified by the imputation method. Example: When method="global_mean," an allowed_missingness_perProtein of 0.5 indicates that any protein missing data for more than 50\% of samples across the entire spatial tissue covered by all samples will be excluded from the imputation method algorithm, and that protein's missing values will not be imputed. When method="mean_perSpatialUnit," then allowed_missingness_perProtein of 0.5 indicates that a protein must have data for at least 50\% of samples in the specified spatial unit (example: a brain ROI) to be used in the imputation algorithm and to be imputed. This argument is only needed for methods that rely on statistics based on per protein. It is used for the following methods: median_a, median_b, global_mean, mean_perSpatialUnit, knn_proteins_global and knn_proteins_perSpatialUnit.}

\item{allowed_missingness_perSample}{Proportion of proteins allowed to be missing for a sample. This argument is only needed when imputing using k-nearest neighbor methods where neighbors are samples. For all other imputation methods provided here, allowed_missingness_perSample does not apply; no samples are excluded from the imputation process for those methods. If missingness in a sample is greater than this thershold, then that sample's data are not included in the imputation for the knn samples neighbors methods.}
}
\value{
an SPE with an 'imputed' data frame
}
\description{
\code{impute_spe()} carries out imputation for missing data in a data frame (df) using a specified method from a range of methods. Accepts input dataset as a data frame (df).
}
\details{
Methods options and descriptions
zero: replace missing values with 0
median_a : replace missing values with global median per protein
median_b : replace missing values with 1/2 global median per protein
global_mean: replace missing values with global mean per protein
mean_perSpatialUnit: replace msising values with mean per spatial unit (example: ROI) for each protein
knn_proteins_global: imputation based on k-nearest neighbors, with proteins as neighbors, based on data from all samples across all ROIs
knn_proteins_perSpatialUnit: imputation based on k-nearest neighbors, with proteins as neighbors, based on data from specified spatial unit (here: ROI)
knn_samples_global_proteinData: imputation based on k-nearest neighbors, with samples as neighbors, based on protein data from all samples.
knn_samples_global_spatialCoords: imputation based on knn, with samples as neighbors, based on spatial coordinates of all samples.
}
