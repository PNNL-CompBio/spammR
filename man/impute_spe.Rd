% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_spe.R
\name{impute_spe}
\alias{impute_spe}
\title{Impute missing values based on spatial coordinates}
\usage{
impute_spe(
  spe,
  assay_name = NULL,
  method = NULL,
  group_colname,
  k = NULL,
  protein_missingness = NULL
)
}
\arguments{
\item{spe}{SPE containing data Data frame containing data to be imputed, where rows correspond to features (which can be specified as row names of dat but it is not required that they be specified) and columns correspond to samples. Column names must correspond to names provided in the sample identifier column in the metadata parameter.}

\item{assay_name}{name of assay with data to be imputed}

\item{method}{Method of imputation to be used. See details.}

\item{group_colname}{Column name in metadata that specifies the group information to use for group_mean or knn_group. Example: ROI_abbreviation.}

\item{k}{K value to be used for k-nearest neighbor imputation}

\item{protein_missingness}{Proportion of samples allowed to have missing data for a protein in the given imputation method. Example: When method="global_mean," an protein_missingness of 0.5 indicates that any protein missing data for more than 50\% of samples across the entire spatial tissue covered by all
samples will be excluded from the imputation method algorithm, and that protein's missing values will not be imputed. When method="group_mean," then protein_missingness of 0.5 indicates that a protein must have data for at least 50\% of samples in the specified group to be used in the
imputation algorithm and to be imputed.}
}
\value{
An SPE with an 'imputed' data frame with the appropriate imputation called
}
\description{
\code{impute_spe()} carries out imputation for missing data in a data frame (df) using a specified method from a range of methods. Accepts input dataset as a data frame (df).
}
\details{
Methods options and descriptions:
\itemize{
\item zero: replace missing values with 0
\item median : replace missing values with global median per protein
\item median_half : replace missing values with 1/2 global median per protein
\item mean: replace missing values with global mean per protein
\item group_mean: replace missing values with mean per group, e.g. group (example: ROI) for each protein
\item knn: imputation based on k-nearest neighbors, with proteins as neighbors, based on data from all samples across all groups. NOTE: There will still be NA values if the protein is not expressed in this group.
\item group_knn: imputation based on k-nearest neighbors, with proteins as neighbors, based on data from specified group (e.g. ROI, tissue). NOTE: There will still be NA values if the protein is not expressed in this group.
\item spatial_knn: imputation based on k-nearest neighors in space
}
}
\examples{

data(pancMeta)
data(protMeta)
data(smallPancData)
#We can put all samples into the same object (for statistical power)
pooledData<-dplyr::bind_cols(smallPancData)
pooled.panc.spe <- convert_to_spe(pooledData,
                pancMeta,
                protMeta,
                feature_meta_colname = 'pancProts',
                sample_id='')
res <- impute_spe(pooled.panc.spe, method='mean')
res2 <- impute_spe(pooled.panc.spe,method='group_mean',group_colname='Image')
mean(assay(res,'imputed')-assay(res2,'imputed',na.rm=T)

}
